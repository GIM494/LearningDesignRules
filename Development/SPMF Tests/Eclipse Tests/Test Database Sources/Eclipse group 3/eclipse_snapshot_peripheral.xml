<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5">

<unit revision="0.9.5" language="Java" filename="org.eclipse.ui.ide.examples.projectsnapshot/src/org/eclipse/ui/ide/examples/projectsnapshot/Activator.java" hash="9df28449484b64984d56a7ca09196db079ab804e"><comment type="block" format="javadoc">/*******************************************************************************
 * Copyright (c) 2010 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/</comment>
<package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>ide</name><operator>.</operator><name>examples</name><operator>.</operator><name>projectsnapshot</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>plugin</name><operator>.</operator><name>AbstractUIPlugin</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>osgi</name><operator>.</operator><name>framework</name><operator>.</operator><name>BundleContext</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The activator class controls the plug-in life cycle
 */</comment>
<class><specifier>public</specifier> class <name>Activator</name> <super><extends>extends <name>AbstractUIPlugin</name></extends></super> <block>{

	<comment type="line">// The plug-in ID</comment>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>PLUGIN_ID</name> <init>= <expr><literal type="string">"org.eclipse.ui.ide.examples.projectsnapshot"</literal></expr></init></decl>;</decl_stmt> <comment type="line">//$NON-NLS-1$</comment>

	<comment type="line">// The shared instance</comment>
	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><name>Activator</name></type> <name>plugin</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc">/**
	 * The constructor
	 */</comment>
	<constructor><specifier>public</specifier> <name>Activator</name><parameter_list>()</parameter_list> <block>{
	}</block></constructor>

	<comment type="block">/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.eclipse.ui.plugin.AbstractUIPlugin#start(org.osgi.framework.BundleContext
	 * )
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>start</name><parameter_list>(<parameter><decl><type><name>BundleContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
		<expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>start</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>plugin</name> <operator>=</operator> <name>this</name></expr>;</expr_stmt>
	}</block></function>

	<comment type="block">/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext
	 * )
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>stop</name><parameter_list>(<parameter><decl><type><name>BundleContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{
		<expr_stmt><expr><name>plugin</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>stop</name></name><argument_list>(<argument><expr><name>context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * Returns the shared instance
	 * 
	 * @return the shared instance
	 */</comment>
	<function><specifier>public</specifier> <specifier>static</specifier> <type><name>Activator</name></type> <name>getDefault</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><name>plugin</name></expr>;</return>
	}</block></function>

}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="org.eclipse.ui.ide.examples.projectsnapshot/src/org/eclipse/ui/ide/examples/projectsnapshot/ProjectRefreshSnapshotExportWizard.java" hash="9c03db83ab88b88edbf61904feb18331c1558137"><comment type="block" format="javadoc">/*******************************************************************************
 * Copyright (c) 2007, 2010 Wind River Systems, Inc. and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Markus Schorn - initial API and implementation
 *    Francis Lynch (Wind River) - adapted from CDT TeamSharedExportWizard
 *******************************************************************************/</comment>

<package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>ide</name><operator>.</operator><name>examples</name><operator>.</operator><name>projectsnapshot</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>IDialogSettings</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredSelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>wizard</name><operator>.</operator><name>Wizard</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>IExportWizard</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>IWorkbench</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>internal</name><operator>.</operator><name>ide</name><operator>.</operator><name>IDEWorkbenchPlugin</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Wizard to create refresh snapshots
 */</comment>
<class><specifier>public</specifier> class <name>ProjectRefreshSnapshotExportWizard</name> <super><extends>extends <name>Wizard</name></extends> <implements>implements
		<name>IExportWizard</name></implements></super> <block>{
	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>DIALOG_SETTINGS_SECTION</name> <init>= <expr><literal type="string">"ProjectRefreshSnapshotExportWizard"</literal></expr></init></decl>;</decl_stmt> <comment type="line">//$NON-NLS-1$</comment>
	<decl_stmt><decl><specifier>private</specifier> <type><name>ProjectRefreshSnapshotExportWizardPage</name></type> <name>fMainPage</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>IStructuredSelection</name></type> <name>fSelection</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc">/**
	 * 
	 */</comment>
	<constructor><specifier>public</specifier> <name>ProjectRefreshSnapshotExportWizard</name><parameter_list>()</parameter_list> <block>{
		<decl_stmt><decl><type><name>IDialogSettings</name></type> <name>workbenchSettings</name> <init>= <expr><call><name><name>IDEWorkbenchPlugin</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call>
				<operator>.</operator><call><name>getDialogSettings</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>IDialogSettings</name></type> <name>section</name> <init>= <expr><call><name><name>workbenchSettings</name>
				<operator>.</operator><name>getSection</name></name><argument_list>(<argument><expr><name>DIALOG_SETTINGS_SECTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><name>section</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><name>section</name> <operator>=</operator> <call><name><name>workbenchSettings</name><operator>.</operator><name>addNewSection</name></name><argument_list>(<argument><expr><name>DIALOG_SETTINGS_SECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name>setDialogSettings</name><argument_list>(<argument><expr><name>section</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<comment type="line">// @Override</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>addPages</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>addPages</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>fMainPage</name> <operator>=</operator> <operator>new</operator> <call><name>ProjectRefreshSnapshotExportWizardPage</name><argument_list>(<argument><expr><name>fSelection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>addPage</name><argument_list>(<argument><expr><name>fMainPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="line">// @Override</comment>
	<function><specifier>public</specifier> <type><name>boolean</name></type> <name>performFinish</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><call><name><name>fMainPage</name><operator>.</operator><name>finish</name></name><argument_list>()</argument_list></call></expr>;</return>
	}</block></function>

	<function><specifier>public</specifier> <type><name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>IWorkbench</name></type> <name>workbench</name></decl></parameter>, <parameter><decl><type><name>IStructuredSelection</name></type> <name>selection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name>fSelection</name> <operator>=</operator> <name>selection</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setWindowTitle</name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizard_exportTitle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setDefaultPageImageDescriptor</name><argument_list>(<argument><expr><call><name><name>IDEWorkbenchPlugin</name>
				<operator>.</operator><name>getIDEImageDescriptor</name></name><argument_list>(<argument><expr><literal type="string">"wizban/exportzip_wiz.png"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">//$NON-NLS-1$</comment>
		<expr_stmt><expr><call><name>setNeedsProgressMonitor</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="org.eclipse.ui.ide.examples.projectsnapshot/src/org/eclipse/ui/ide/examples/projectsnapshot/Messages.java" hash="94d9606eddedbffd2e80d14b56b9532044c8b53f"><comment type="block" format="javadoc">/*******************************************************************************
 * Copyright (c) 2010 Wind River Systems, Inc. and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Francis Lynch (Wind River) - initial API and implementation
 *******************************************************************************/</comment>

<package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>ide</name><operator>.</operator><name>examples</name><operator>.</operator><name>projectsnapshot</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>osgi</name><operator>.</operator><name>util</name><operator>.</operator><name>NLS</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Messages for refresh snapshot wizards
 */</comment>
<class><specifier>public</specifier> class <name>Messages</name> <super><extends>extends <name>NLS</name></extends></super> <block>{
	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>BUNDLE_NAME</name> <init>= <expr><literal type="string">"org.eclipse.ui.ide.examples.projectsnapshot.messages"</literal></expr></init></decl>;</decl_stmt> <comment type="line">//$NON-NLS-1$</comment>

	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizard_exportTitle</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_title</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_description</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_selectProjects</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_selectAll</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_deselectAll</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_errorsOccurred</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_needProjectSelected</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_errorDialogTitle</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_selectSnapshot</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_snapshotBrowse</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_browseSnapshot</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_overwrite</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotExportWizardPage_question</name></decl>;</decl_stmt>

	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizard_importTitle</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_projectLabel</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_title</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_description</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_selectProject</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_selectSnapshot</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_sourceBrowse</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_sourceDirectory</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_snapshotBrowse</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_selectProjects</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_searching</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_processing</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_hiddenProjects</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_internalError</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_snapshotError</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_checking</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_browseSource</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_browseSnapshot</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_creationProblems</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_createProjectsTask</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_overwrite</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_overwriteInFolder</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_question</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>ProjectRefreshSnapshotImportWizardPage_recurse</name></decl>;</decl_stmt>

	<static>static <block>{
		<expr_stmt><expr><call><name><name>NLS</name><operator>.</operator><name>initializeMessages</name></name><argument_list>(<argument><expr><name>BUNDLE_NAME</name></expr></argument>, <argument><expr><name><name>Messages</name><operator>.</operator><name>class</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></static>

}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="org.eclipse.ui.ide.examples.projectsnapshot/src/org/eclipse/ui/ide/examples/projectsnapshot/ProjectRefreshSnapshotImportWizard.java" hash="9da345f36bc802ceeac391d98dad7075f875e97a"><comment type="block" format="javadoc">/*******************************************************************************
 * Copyright (c) 2000, 2010 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *     Francis Lynch (Wind River) - adapted from standard project import
 *******************************************************************************/</comment>
<package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>ide</name><operator>.</operator><name>examples</name><operator>.</operator><name>projectsnapshot</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>IDialogSettings</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredSelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>wizard</name><operator>.</operator><name>Wizard</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>IImportWizard</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>IWorkbench</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>internal</name><operator>.</operator><name>ide</name><operator>.</operator><name>IDEWorkbenchPlugin</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Wizard for importing projects with a refresh snapshot into the Eclipse
 * workspace. Allows specification of the URI for the project refresh snapshot.
 * Currently, that URI is assumed to contain a file named
 * &lt;projectName&gt;-index.zip that was created by the export refresh snapshot
 * wizard.
 * &lt;p&gt;
 * This class may be instantiated and used without further configuration; this
 * class is not intended to be subclassed.
 * &lt;/p&gt;
 */</comment>
<class><specifier>public</specifier> class <name>ProjectRefreshSnapshotImportWizard</name> <super><extends>extends <name>Wizard</name></extends> <implements>implements
		<name>IImportWizard</name></implements></super> <block>{
	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>EXTERNAL_PROJECT_SECTION</name> <init>= <expr><literal type="string">"ProjectRefreshSnapshotImportWizard"</literal></expr></init></decl>;</decl_stmt><comment type="line">//$NON-NLS-1$</comment>
	<decl_stmt><decl><specifier>private</specifier> <type><name>ProjectRefreshSnapshotImportWizardPage</name></type> <name>mainPage</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc">/**
	 * Constructor for ProjectRefreshSnapshotImportWizard.
	 */</comment>
	<constructor><specifier>public</specifier> <name>ProjectRefreshSnapshotImportWizard</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setNeedsProgressMonitor</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>IDialogSettings</name></type> <name>workbenchSettings</name> <init>= <expr><call><name><name>IDEWorkbenchPlugin</name><operator>.</operator><name>getDefault</name></name><argument_list>()</argument_list></call>
				<operator>.</operator><call><name>getDialogSettings</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name>IDialogSettings</name></type> <name>wizardSettings</name> <init>= <expr><call><name><name>workbenchSettings</name>
				<operator>.</operator><name>getSection</name></name><argument_list>(<argument><expr><name>EXTERNAL_PROJECT_SECTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><name>wizardSettings</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><name>wizardSettings</name> <operator>=</operator> <call><name><name>workbenchSettings</name>
					<operator>.</operator><name>addNewSection</name></name><argument_list>(<argument><expr><name>EXTERNAL_PROJECT_SECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name>setDialogSettings</name><argument_list>(<argument><expr><name>wizardSettings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<comment type="block">/*
	 * (non-Javadoc) Method declared on IWizard.
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>addPages</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>addPages</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>mainPage</name> <operator>=</operator> <operator>new</operator> <call><name>ProjectRefreshSnapshotImportWizardPage</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>addPage</name><argument_list>(<argument><expr><name>mainPage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block">/*
	 * (non-Javadoc) Method declared on IWorkbenchWizard.
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>init</name><parameter_list>(<parameter><decl><type><name>IWorkbench</name></type> <name>workbench</name></decl></parameter>, <parameter><decl><type><name>IStructuredSelection</name></type> <name>currentSelection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name>setWindowTitle</name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotImportWizard_importTitle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setDefaultPageImageDescriptor</name><argument_list>(<argument><expr><call><name><name>IDEWorkbenchPlugin</name>
				<operator>.</operator><name>getIDEImageDescriptor</name></name><argument_list>(<argument><expr><literal type="string">"wizban/importproj_wiz.png"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">//$NON-NLS-1$</comment>
	}</block></function>

	<comment type="block">/*
	 * (non-Javadoc) Method declared on IWizard.
	 */</comment>
	<function><specifier>public</specifier> <type><name>boolean</name></type> <name>performCancel</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>mainPage</name><operator>.</operator><name>performCancel</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><literal type="boolean">true</literal></expr>;</return>
	}</block></function>

	<comment type="block">/*
	 * (non-Javadoc) Method declared on IWizard.
	 */</comment>
	<function><specifier>public</specifier> <type><name>boolean</name></type> <name>performFinish</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><call><name><name>mainPage</name><operator>.</operator><name>createProjects</name></name><argument_list>()</argument_list></call></expr>;</return>
	}</block></function>

}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="org.eclipse.ui.ide.examples.projectsnapshot/src/org/eclipse/ui/ide/examples/projectsnapshot/ProjectRefreshSnapshotExportWizardPage.java" hash="5604c54079b06d2cbfbda58c0d724ad51df66d39"><comment type="block" format="javadoc">/*******************************************************************************
 * Copyright (c) 2007, 2010 Wind River Systems, Inc. and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Markus Schorn - initial API and implementation
 *    Francis Lynch (Wind River) - adapted from CDT TeamSharedExportWizardPage
 *******************************************************************************/</comment>
<package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>ide</name><operator>.</operator><name>examples</name><operator>.</operator><name>projectsnapshot</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>io</name><operator>.</operator><name>File</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>ArrayList</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Collection</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>HashSet</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Iterator</name></name>;</import>
<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>List</name></name>;</import>

<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>resources</name><operator>.</operator><name>IProject</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>runtime</name><operator>.</operator><name>CoreException</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>runtime</name><operator>.</operator><name>IPath</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>runtime</name><operator>.</operator><name>MultiStatus</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>runtime</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>ErrorDialog</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>IDialogConstants</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>MessageDialog</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>CheckStateChangedEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>CheckboxTableViewer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>ICheckStateListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredContentProvider</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredSelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>Viewer</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>osgi</name><operator>.</operator><name>util</name><operator>.</operator><name>NLS</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>SWT</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>events</name><operator>.</operator><name>FocusAdapter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>events</name><operator>.</operator><name>SelectionAdapter</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>events</name><operator>.</operator><name>SelectionEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>events</name><operator>.</operator><name>TraverseEvent</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>events</name><operator>.</operator><name>TraverseListener</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>layout</name><operator>.</operator><name>GridData</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>layout</name><operator>.</operator><name>GridLayout</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Button</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Composite</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>DirectoryDialog</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Event</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Label</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Shell</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Table</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Text</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>WizardDataTransferPage</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>internal</name><operator>.</operator><name>ide</name><operator>.</operator><name>IDEWorkbenchPlugin</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>model</name><operator>.</operator><name>WorkbenchLabelProvider</name></name>;</import>

<comment type="block" format="javadoc">/**
 * The wizard page for export refresh snapshot
 */</comment>
<class><specifier>public</specifier> class <name>ProjectRefreshSnapshotExportWizardPage</name> <super><extends>extends
		<name>WizardDataTransferPage</name></extends></super> <block>{

	<decl_stmt><decl><specifier>private</specifier> <type><name>IStructuredSelection</name></type> <name>fInitialSelection</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>CheckboxTableViewer</name></type> <name>fProjectViewer</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>Text</name></type> <name>directorySnapshotPathField</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>Button</name></type> <name>browseSnapshotDirectoryButton</name></decl>;</decl_stmt>
	<comment type="line">// Keep track of the directory that we browsed to last time</comment>
	<comment type="line">// the wizard was invoked.</comment>
	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><name>String</name></type> <name>previouslyBrowsedSnapshotDirectory</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt> <comment type="line">//$NON-NLS-1$</comment>

	<comment type="block" format="javadoc">/**
	 * Create an instance of this class
	 */</comment>
	<constructor><specifier>protected</specifier> <name>ProjectRefreshSnapshotExportWizardPage</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>,
			<parameter><decl><type><name>IStructuredSelection</name></type> <name>selection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name>super</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>fInitialSelection</name> <operator>=</operator> <name>selection</name></expr>;</expr_stmt>
	}</block></constructor>

	<comment type="block" format="javadoc">/**
	 * Create an instance of this class.
	 * 
	 * @param selection
	 *            the selection
	 */</comment>
	<constructor><specifier>public</specifier> <name>ProjectRefreshSnapshotExportWizardPage</name><parameter_list>(<parameter><decl><type><name>IStructuredSelection</name></type> <name>selection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name>this</name><argument_list>(<argument><expr><literal type="string">"refreshSnapshotExportPage"</literal></expr></argument>, <argument><expr><name>selection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">//$NON-NLS-1$</comment>
		<expr_stmt><expr><call><name>setTitle</name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_title</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setDescription</name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_description</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><specifier>public</specifier> <type><name>void</name></type> <name>createControl</name><parameter_list>(<parameter><decl><type><name>Composite</name></type> <name>parent</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name>initializeDialogUnits</name><argument_list>(<argument><expr><name>parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>Composite</name></type> <name>composite</name> <init>= <expr><operator>new</operator> <call><name>Composite</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>NULL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>composite</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridLayout</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>composite</name><operator>.</operator><name>setLayoutData</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridData</name><argument_list>(<argument><expr><name><name>GridData</name><operator>.</operator><name>VERTICAL_ALIGN_FILL</name></name>
				<operator>|</operator> <name><name>GridData</name><operator>.</operator><name>HORIZONTAL_ALIGN_FILL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>composite</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getFont</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>createResourcesGroup</name><argument_list>(<argument><expr><name>composite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>createSnapshotArea</name><argument_list>(<argument><expr><name>composite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>restoreWidgetValues</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>fInitialSelection</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name>setupBasedOnInitialSelections</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<expr_stmt><expr><call><name>updateWidgetEnablements</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setPageComplete</name><argument_list>(<argument><expr><call><name>determinePageCompletion</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setErrorMessage</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// should not initially have error message</comment>

		<expr_stmt><expr><call><name>setControl</name><argument_list>(<argument><expr><name>composite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><specifier>private</specifier> <type><name>void</name></type> <name>checkForComplete</name><parameter_list>()</parameter_list> <block>{
		<if>if <condition>(<expr><call><name><name>fProjectViewer</name><operator>.</operator><name>getCheckedElements</name></name><argument_list>()</argument_list></call><operator>.</operator><name>length</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
			<decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><call><name><name>directorySnapshotPathField</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if>if <condition>(<expr><call><name><name>path</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
				<decl_stmt><decl><type><name>File</name></type> <name>dirpath</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if>if <condition>(<expr><call><name><name>dirpath</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
					<expr_stmt><expr><call><name>setPageComplete</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return>return;</return>
				}</block></then></if>
			}</block></then></if>
		}</block></then></if>

		<expr_stmt><expr><call><name>setPageComplete</name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * Creates the checkbox tree and list for selecting resources.
	 * 
	 * @param parent
	 *            the parent control
	 */</comment>
	<function><specifier>private</specifier> <specifier>final</specifier> <type><name>void</name></type> <name>createResourcesGroup</name><parameter_list>(<parameter><decl><type><name>Composite</name></type> <name>parent</name></decl></parameter>)</parameter_list> <block>{
		<decl_stmt><decl><type><name>Composite</name></type> <name>resourcesGroup</name> <init>= <expr><operator>new</operator> <call><name>Composite</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>NONE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>resourcesGroup</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridLayout</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>resourcesGroup</name><operator>.</operator><name>setLayoutData</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridData</name><argument_list>(<argument><expr><name><name>GridData</name><operator>.</operator><name>FILL_BOTH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>resourcesGroup</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getFont</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><operator>new</operator> <call><name>Label</name><argument_list>(<argument><expr><name>resourcesGroup</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>NONE</name></name></expr></argument>)</argument_list></call>
				<operator>.</operator><call><name>setText</name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_selectProjects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>Table</name></type> <name>table</name> <init>= <expr><operator>new</operator> <call><name>Table</name><argument_list>(<argument><expr><name>resourcesGroup</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>CHECK</name></name> <operator>|</operator> <name><name>SWT</name><operator>.</operator><name>BORDER</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>table</name><operator>.</operator><name>setLayoutData</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridData</name><argument_list>(<argument><expr><name><name>GridData</name><operator>.</operator><name>FILL_BOTH</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>fProjectViewer</name> <operator>=</operator> <operator>new</operator> <call><name>CheckboxTableViewer</name><argument_list>(<argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>fProjectViewer</name><operator>.</operator><name>setContentProvider</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>IStructuredContentProvider</name></super><argument_list>()</argument_list> <block>{
			<decl_stmt><decl><type><name>List</name></type> <name>fContents</name></decl>;</decl_stmt>

			<function><specifier>public</specifier> <type><name><name>Object</name><index>[]</index></name></type> <name>getElements</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>input</name></decl></parameter>)</parameter_list> <block>{
				<if>if <condition>(<expr><name>fContents</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <name>fContents</name> <operator>==</operator> <name>input</name></expr>)</condition><then>
					<block type="pseudo"><return>return <expr><call><name><name>fContents</name><operator>.</operator><name>toArray</name></name><argument_list>()</argument_list></call></expr>;</return></block></then></if>
				<return>return <expr><operator>new</operator> <name><name>Object</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr>;</return>
			}</block></function>

			<function><specifier>public</specifier> <type><name>void</name></type> <name>inputChanged</name><parameter_list>(<parameter><decl><type><name>Viewer</name></type> <name>viewer</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>oldInput</name></decl></parameter>,
					<parameter><decl><type><name>Object</name></type> <name>newInput</name></decl></parameter>)</parameter_list> <block>{
				<if>if <condition>(<expr><name>newInput</name> <operator>instanceof</operator> <name>List</name></expr>)</condition><then>
					<block type="pseudo"><expr_stmt><expr><name>fContents</name> <operator>=</operator> <operator>(</operator><name>List</name><operator>)</operator> <name>newInput</name></expr>;</expr_stmt></block></then>
				<else>else
					<block type="pseudo"><expr_stmt><expr><name>fContents</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt></block></else></if>
				<comment type="line">// we use a fixed set.</comment>
			}</block></function>

			<function><specifier>public</specifier> <type><name>void</name></type> <name>dispose</name><parameter_list>()</parameter_list> <block>{
			}</block></function>

		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>fProjectViewer</name><operator>.</operator><name>setLabelProvider</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>WorkbenchLabelProvider</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>ICheckStateListener</name></type> <name>checkListener</name> <init>= <expr><operator>new</operator> <class><super><name>ICheckStateListener</name></super><argument_list>()</argument_list> <block>{
			<function><specifier>public</specifier> <type><name>void</name></type> <name>checkStateChanged</name><parameter_list>(<parameter><decl><type><name>CheckStateChangedEvent</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{
				<expr_stmt><expr><call><name>updateWidgetEnablements</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>fProjectViewer</name><operator>.</operator><name>addCheckStateListener</name></name><argument_list>(<argument><expr><name>checkListener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line">// top level group</comment>
		<decl_stmt><decl><type><name>Composite</name></type> <name>buttonComposite</name> <init>= <expr><operator>new</operator> <call><name>Composite</name><argument_list>(<argument><expr><name>resourcesGroup</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>NONE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>buttonComposite</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getFont</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>GridLayout</name></type> <name>layout</name> <init>= <expr><operator>new</operator> <call><name>GridLayout</name><argument_list>(<argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name>layout</name><operator>.</operator><name>marginHeight</name></name> <operator>=</operator> <name><name>layout</name><operator>.</operator><name>marginWidth</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>buttonComposite</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><name>layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>buttonComposite</name><operator>.</operator><name>setLayoutData</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridData</name><argument_list>(<argument><expr><name><name>GridData</name><operator>.</operator><name>VERTICAL_ALIGN_FILL</name></name>
				<operator>|</operator> <name><name>GridData</name><operator>.</operator><name>HORIZONTAL_ALIGN_FILL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>Button</name></type> <name>selectButton</name> <init>= <expr><call><name>createButton</name><argument_list>(<argument><expr><name>buttonComposite</name></expr></argument>,
				<argument><expr><name><name>IDialogConstants</name><operator>.</operator><name>SELECT_ALL_ID</name></name></expr></argument>,
				<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_selectAll</name></name></expr></argument>,
				<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name>SelectionAdapter</name></type> <name>listener</name> <init>= <expr><operator>new</operator> <class><super><name>SelectionAdapter</name></super><argument_list>()</argument_list> <block>{
			<comment type="line">// @Override</comment>
			<function><specifier>public</specifier> <type><name>void</name></type> <name>widgetSelected</name><parameter_list>(<parameter><decl><type><name>SelectionEvent</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
				<expr_stmt><expr><call><name><name>fProjectViewer</name><operator>.</operator><name>setAllChecked</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>updateWidgetEnablements</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>selectButton</name><operator>.</operator><name>addSelectionListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>Button</name></type> <name>deselectButton</name> <init>= <expr><call><name>createButton</name><argument_list>(<argument><expr><name>buttonComposite</name></expr></argument>,
				<argument><expr><name><name>IDialogConstants</name><operator>.</operator><name>DESELECT_ALL_ID</name></name></expr></argument>,
				<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_deselectAll</name></name></expr></argument>,
				<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name>listener</name> <operator>=</operator> <operator>new</operator> <class><super><name>SelectionAdapter</name></super><argument_list>()</argument_list> <block>{
			<comment type="line">// @Override</comment>
			<function><specifier>public</specifier> <type><name>void</name></type> <name>widgetSelected</name><parameter_list>(<parameter><decl><type><name>SelectionEvent</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
				<expr_stmt><expr><call><name><name>fProjectViewer</name><operator>.</operator><name>setAllChecked</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name>updateWidgetEnablements</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			}</block></function>
		}</block></class></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>deselectButton</name><operator>.</operator><name>addSelectionListener</name></name><argument_list>(<argument><expr><name>listener</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>initProjects</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><specifier>private</specifier> <type><name>Button</name></type> <name>createButton</name><parameter_list>(<parameter><decl><type><name>Composite</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>id</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>label</name></decl></parameter>,
			<parameter><decl><type><name>boolean</name></type> <name>defaultButton</name></decl></parameter>)</parameter_list> <block>{
		<decl_stmt><decl><type><name>Button</name></type> <name>button</name> <init>= <expr><operator>new</operator> <call><name>Button</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>PUSH</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name>GridData</name></type> <name>buttonData</name> <init>= <expr><operator>new</operator> <call><name>GridData</name><argument_list>(<argument><expr><name><name>GridData</name><operator>.</operator><name>FILL_HORIZONTAL</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>button</name><operator>.</operator><name>setLayoutData</name></name><argument_list>(<argument><expr><name>buttonData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name>button</name><operator>.</operator><name>setData</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Integer</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>button</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>button</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getFont</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if>if <condition>(<expr><name>defaultButton</name></expr>)</condition><then> <block>{
			<decl_stmt><decl><type><name>Shell</name></type> <name>shell</name> <init>= <expr><call><name><name>parent</name><operator>.</operator><name>getShell</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if>if <condition>(<expr><name>shell</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
				<expr_stmt><expr><call><name><name>shell</name><operator>.</operator><name>setDefaultButton</name></name><argument_list>(<argument><expr><name>button</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><call><name><name>button</name><operator>.</operator><name>setFocus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><name>button</name><operator>.</operator><name>setFont</name></name><argument_list>(<argument><expr><call><name><name>parent</name><operator>.</operator><name>getFont</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setButtonLayoutData</name><argument_list>(<argument><expr><name>button</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>button</name></expr>;</return>
	}</block></function>

	<function><specifier>private</specifier> <type><name>void</name></type> <name>initProjects</name><parameter_list>()</parameter_list> <block>{
		<decl_stmt><decl><type><name>ArrayList</name></type> <name>input</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name>IProject</name><index>[]</index></name></type> <name>projects</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>projects</name> <operator>=</operator> <call><name><name>IDEWorkbenchPlugin</name><operator>.</operator><name>getPluginWorkspace</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRoot</name><argument_list>()</argument_list></call>
				<operator>.</operator><call><name>getProjects</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>projects</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
			<if>if <condition>(<expr><name><name>projects</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>isOpen</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
				<expr_stmt><expr><call><name><name>input</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>projects</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
		<expr_stmt><expr><call><name><name>fProjectViewer</name><operator>.</operator><name>setInput</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><specifier>private</specifier> <type><name>void</name></type> <name>setupBasedOnInitialSelections</name><parameter_list>()</parameter_list> <block>{
		<decl_stmt><decl><type><name>HashSet</name></type> <name>names</name> <init>= <expr><operator>new</operator> <call><name>HashSet</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>Iterator</name></type> <name>it</name> <init>= <expr><call><name><name>fInitialSelection</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{
			<decl_stmt><decl><type><name>IProject</name></type> <name>project</name> <init>= <expr><operator>(</operator><name>IProject</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>names</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>project</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></while>

		<decl_stmt><decl><type><name>Collection</name></type> <name>prjsc</name> <init>= <expr><operator>(</operator><name>Collection</name><operator>)</operator> <call><name><name>fProjectViewer</name><operator>.</operator><name>getInput</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>prjs</name> <init>= <expr><call><name><name>prjsc</name><operator>.</operator><name>toArray</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>prjs</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
			<decl_stmt><decl><type><name>Object</name></type> <name>element</name> <init>= <expr><name><name>prjs</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>IProject</name></type> <name>prj</name> <init>= <expr><operator>(</operator><name>IProject</name><operator>)</operator> <name>element</name></expr></init></decl>;</decl_stmt>
			<if>if <condition>(<expr><call><name><name>names</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><call><name><name>prj</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
				<expr_stmt><expr><call><name><name>fProjectViewer</name><operator>.</operator><name>setChecked</name></name><argument_list>(<argument><expr><name>prj</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * Create the area to specify the snapshot directory.
	 * 
	 * @param workArea
	 */</comment>
	<function><specifier>private</specifier> <type><name>void</name></type> <name>createSnapshotArea</name><parameter_list>(<parameter><decl><type><name>Composite</name></type> <name>workArea</name></decl></parameter>)</parameter_list> <block>{
		<comment type="line">// project specification group</comment>
		<decl_stmt><decl><type><name>Composite</name></type> <name>snapshotGroup</name> <init>= <expr><operator>new</operator> <call><name>Composite</name><argument_list>(<argument><expr><name>workArea</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>NONE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>GridLayout</name></type> <name>layout</name> <init>= <expr><operator>new</operator> <call><name>GridLayout</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name>layout</name><operator>.</operator><name>numColumns</name></name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>layout</name><operator>.</operator><name>makeColumnsEqualWidth</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>layout</name><operator>.</operator><name>marginWidth</name></name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>snapshotGroup</name><operator>.</operator><name>setLayout</name></name><argument_list>(<argument><expr><name>layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>snapshotGroup</name><operator>.</operator><name>setLayoutData</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridData</name><argument_list>(<argument><expr><name><name>GridData</name><operator>.</operator><name>FILL_HORIZONTAL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>Label</name></type> <name>title</name> <init>= <expr><operator>new</operator> <call><name>Label</name><argument_list>(<argument><expr><name>snapshotGroup</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>NONE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>title</name><operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_selectSnapshot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line">// refresh snapshot directory location entry field</comment>
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>directorySnapshotPathField</name></name> <operator>=</operator> <operator>new</operator> <call><name>Text</name><argument_list>(<argument><expr><name>snapshotGroup</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>BORDER</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>directorySnapshotPathField</name><operator>.</operator><name>setLayoutData</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>GridData</name><argument_list>(
				<argument><expr><name><name>GridData</name><operator>.</operator><name>FILL_HORIZONTAL</name></name> <operator>|</operator> <name><name>GridData</name><operator>.</operator><name>GRAB_HORIZONTAL</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line">// browse button</comment>
		<expr_stmt><expr><name>browseSnapshotDirectoryButton</name> <operator>=</operator> <operator>new</operator> <call><name>Button</name><argument_list>(<argument><expr><name>snapshotGroup</name></expr></argument>, <argument><expr><name><name>SWT</name><operator>.</operator><name>PUSH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>browseSnapshotDirectoryButton</name>
				<operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_snapshotBrowse</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setButtonLayoutData</name><argument_list>(<argument><expr><name>browseSnapshotDirectoryButton</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name>browseSnapshotDirectoryButton</name>
				<operator>.</operator><name>addSelectionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>SelectionAdapter</name></super><argument_list>()</argument_list> <block>{
					<comment type="block">/*
					 * (non-Javadoc)
					 * 
					 * @see org.eclipse.swt.events.SelectionAdapter#widgetS
					 * elected(org.eclipse.swt.events.SelectionEvent)
					 */</comment>
					<function><specifier>public</specifier> <type><name>void</name></type> <name>widgetSelected</name><parameter_list>(<parameter><decl><type><name>SelectionEvent</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
						<expr_stmt><expr><call><name>handleLocationSnapshotDirectoryButtonPressed</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
					}</block></function>
				}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name>directorySnapshotPathField</name><operator>.</operator><name>addTraverseListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>TraverseListener</name></super><argument_list>()</argument_list> <block>{

			<comment type="block">/*
			 * (non-Javadoc)
			 * 
			 * @see org.eclipse.swt.events.TraverseListener#keyTraversed(
			 * org.eclipse.swt.events.TraverseEvent)
			 */</comment>
			<function><specifier>public</specifier> <type><name>void</name></type> <name>keyTraversed</name><parameter_list>(<parameter><decl><type><name>TraverseEvent</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
				<if>if <condition>(<expr><name><name>e</name><operator>.</operator><name>detail</name></name> <operator>==</operator> <name><name>SWT</name><operator>.</operator><name>TRAVERSE_RETURN</name></name></expr>)</condition><then> <block>{
					<expr_stmt><expr><name><name>e</name><operator>.</operator><name>doit</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name>checkForComplete</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></function>

		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name>directorySnapshotPathField</name><operator>.</operator><name>addFocusListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>FocusAdapter</name></super><argument_list>()</argument_list> <block>{

			<comment type="block">/*
			 * (non-Javadoc)
			 * 
			 * @see
			 * org.eclipse.swt.events.FocusListener#focusLost(org.eclipse.swt
			 * .events.FocusEvent)
			 */</comment>
			<function><specifier>public</specifier> <type><name>void</name></type> <name>focusLost</name><parameter_list>(<parameter><decl><type><name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>events</name><operator>.</operator><name>FocusEvent</name></name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
				<expr_stmt><expr><call><name>checkForComplete</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			}</block></function>

		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></function>

	<comment type="block" format="javadoc">/**
	 * The browse button has been selected. Select the location.
	 */</comment>
	<function><specifier>protected</specifier> <type><name>void</name></type> <name>handleLocationSnapshotDirectoryButtonPressed</name><parameter_list>()</parameter_list> <block>{

		<decl_stmt><decl><type><name>DirectoryDialog</name></type> <name>dialog</name> <init>= <expr><operator>new</operator> <call><name>DirectoryDialog</name><argument_list>(
				<argument><expr><call><name><name>directorySnapshotPathField</name><operator>.</operator><name>getShell</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>dialog</name><operator>.</operator><name>setMessage</name></name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_browseSnapshot</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>String</name></type> <name>dirName</name> <init>= <expr><call><name><name>directorySnapshotPathField</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><call><name><name>dirName</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><name>dirName</name> <operator>=</operator> <name>previouslyBrowsedSnapshotDirectory</name></expr>;</expr_stmt>
		}</block></then></if>

		<if>if <condition>(<expr><call><name><name>dirName</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name><name>dialog</name><operator>.</operator><name>setFilterPath</name></name><argument_list>(<argument><expr><call><name><name>IDEWorkbenchPlugin</name><operator>.</operator><name>getPluginWorkspace</name></name><argument_list>()</argument_list></call>
					<operator>.</operator><call><name>getRoot</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLocation</name><argument_list>()</argument_list></call><operator>.</operator><call><name>toOSString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else>else <block>{
			<decl_stmt><decl><type><name>File</name></type> <name>path</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if>if <condition>(<expr><call><name><name>path</name><operator>.</operator><name>exists</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
				<expr_stmt><expr><call><name><name>dialog</name><operator>.</operator><name>setFilterPath</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><name>dirName</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>toOSString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>

		<decl_stmt><decl><type><name>String</name></type> <name>selectedDirectory</name> <init>= <expr><call><name><name>dialog</name><operator>.</operator><name>open</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><name>selectedDirectory</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><name>previouslyBrowsedSnapshotDirectory</name> <operator>=</operator> <name>selectedDirectory</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>directorySnapshotPathField</name>
					<operator>.</operator><name>setText</name></name><argument_list>(<argument><expr><name>previouslyBrowsedSnapshotDirectory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name>checkForComplete</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @return Return true to indicate that the operation was a success
	 * 
	 */</comment>
	<function><specifier>public</specifier> <type><name>boolean</name></type> <name>finish</name><parameter_list>()</parameter_list> <block>{
		<decl_stmt><decl><type><name><name>IProject</name><index>[]</index></name></type> <name>projectsToSnapshot</name> <init>= <expr><call><name>getCheckedElements</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line">// about to invoke the operation so save our state</comment>
		<expr_stmt><expr><call><name>saveWidgetValues</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

		<return>return <expr><call><name>executeSnapshotOperation</name><argument_list>(<argument><expr><name>projectsToSnapshot</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>

	<function><specifier>private</specifier> <type><name><name>IProject</name><index>[]</index></name></type> <name>getCheckedElements</name><parameter_list>()</parameter_list> <block>{
		<decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>obj</name> <init>= <expr><call><name><name>fProjectViewer</name><operator>.</operator><name>getCheckedElements</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name>IProject</name><index>[]</index></name></type> <name>prjs</name> <init>= <expr><operator>new</operator> <name><name>IProject</name><index>[<expr><name><name>obj</name><operator>.</operator><name>length</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>arraycopy</name></name><argument_list>(<argument><expr><name>obj</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>prjs</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name><name>obj</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>prjs</name></expr>;</return>
	}</block></function>

	<function><specifier>private</specifier> <type><name>boolean</name></type> <name>executeSnapshotOperation</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name><name>IProject</name><index>[]</index></name></type> <name>projects</name></decl></parameter>)</parameter_list> <block>{
		<decl_stmt><decl><type><specifier>final</specifier> <name>MultiStatus</name></type> <name>status</name> <init>= <expr><operator>new</operator> <call><name>MultiStatus</name><argument_list>(
				<argument><expr><name><name>IDEWorkbenchPlugin</name><operator>.</operator><name>IDE_WORKBENCH</name></name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
				<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_errorsOccurred</name></name></expr></argument>,
				<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier>final</specifier> <name>IPath</name></type> <name>snapshotPath</name> <init>= <expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>directorySnapshotPathField</name>
				<operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>projects</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{
			<decl_stmt><decl><type><name>IProject</name></type> <name>project</name> <init>= <expr><name><name>projects</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<try>try <block>{
				<decl_stmt><decl><type><name>String</name></type> <name>projectName</name> <init>= <expr><call><name><name>project</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>boolean</name></type> <name>cancelled</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>IPath</name></type> <name>zipPath</name> <init>= <expr><call><name><name>snapshotPath</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>projectName</name> <operator>+</operator> <literal type="string">"-index.zip"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">//$NON-NLS-1$</comment>
				<if>if <condition>(<expr><call><name><name>zipPath</name><operator>.</operator><name>toFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>exists</name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
					<decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>buttons</name> <init>= <expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{
							<expr><name><name>IDialogConstants</name><operator>.</operator><name>YES_LABEL</name></name></expr>,
							<expr><name><name>IDialogConstants</name><operator>.</operator><name>NO_LABEL</name></name></expr>,
							<expr><name><name>IDialogConstants</name><operator>.</operator><name>CANCEL_LABEL</name></name></expr> }</block></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name>String</name></type> <name>question</name> <init>= <expr><call><name><name>NLS</name>
							<operator>.</operator><name>bind</name></name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_overwrite</name></name></expr></argument>,
									<argument><expr><call><name><name>zipPath</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name>MessageDialog</name></type> <name>d</name> <init>= <expr><operator>new</operator> <class><super><name>MessageDialog</name></super><argument_list>(
							<argument><expr><call><name>getShell</name><argument_list>()</argument_list></call></expr></argument>,
							<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_question</name></name></expr></argument>,
							<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>question</name></expr></argument>, <argument><expr><name><name>MessageDialog</name><operator>.</operator><name>QUESTION</name></name></expr></argument>, <argument><expr><name>buttons</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>)</argument_list> <block>{
						<function><specifier>protected</specifier> <type><name>int</name></type> <name>getShellStyle</name><parameter_list>()</parameter_list> <block>{
							<return>return <expr><call><name><name>super</name><operator>.</operator><name>getShellStyle</name></name><argument_list>()</argument_list></call> <operator>|</operator> <name><name>SWT</name><operator>.</operator><name>SHEET</name></name></expr>;</return>
						}</block></function>
					}</block></class></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name>int</name></type> <name>overwrite</name> <init>= <expr><call><name><name>d</name><operator>.</operator><name>open</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
					<switch>switch <condition>(<expr><name>overwrite</name></expr>)</condition> <block>{
					<case>case <expr><literal type="number">0</literal></expr>:</case> <comment type="line">// Yes</comment>
						<break>break;</break>
					<case>case <expr><literal type="number">1</literal></expr>:</case> <comment type="line">// No</comment>
						<continue>continue;</continue>
					<case>case <expr><literal type="number">2</literal></expr>:</case> <comment type="line">// Cancel</comment>
					<default>default:</default>
						<expr_stmt><expr><name>cancelled</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
						<break>break;</break>
					}</block></switch>
				}</block></then></if>
				<if>if <condition>(<expr><name>cancelled</name></expr>)</condition><then>
					<block type="pseudo"><break>break;</break></block></then></if>
				<decl_stmt><decl><type><name>URI</name></type> <name>snapshotLocation</name> <init>= <expr><call><name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>filesystem</name><operator>.</operator><name>URIUtil</name>
						<operator>.</operator><name>toURI</name></name><argument_list>(<argument><expr><name>zipPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name>project</name><operator>.</operator><name>saveSnapshot</name></name><argument_list>(<argument><expr><name><name>IProject</name><operator>.</operator><name>SNAPSHOT_TREE</name></name></expr></argument>, <argument><expr><name>snapshotLocation</name></expr></argument>,
						<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>CoreException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
				<expr_stmt><expr><call><name><name>status</name><operator>.</operator><name>merge</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getStatus</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></catch></try>
		}</block></for>
		<if>if <condition>(<expr><operator>!</operator><call><name><name>status</name><operator>.</operator><name>isOK</name></name><argument_list>()</argument_list></call></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name><name>IDEWorkbenchPlugin</name><operator>.</operator><name>log</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">//$NON-NLS-1$</comment>
			<expr_stmt><expr><call><name><name>ErrorDialog</name><operator>.</operator><name>openError</name></name><argument_list>(<argument><expr><call><name>getContainer</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getShell</name><argument_list>()</argument_list></call></expr></argument>,
					<argument><expr><call><name>getErrorDialogTitle</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <comment type="line">// no special message</comment>
					<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><literal type="boolean">false</literal></expr>;</return>
		}</block></then></if>

		<return>return <expr><literal type="boolean">true</literal></expr>;</return>
	}</block></function>

	<comment type="line">// @Override</comment>
	<function><specifier>protected</specifier> <type><name>boolean</name></type> <name>validateSourceGroup</name><parameter_list>()</parameter_list> <block>{
		<comment type="line">// there must be some resources selected for Export</comment>
		<decl_stmt><decl><type><name>boolean</name></type> <name>isValid</name> <init>= <expr><literal type="boolean">true</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>projectsToExport</name> <init>= <expr><call><name>getCheckedElements</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><name><name>projectsToExport</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name>setErrorMessage</name><argument_list>(<argument><expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_needProjectSelected</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>isValid</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
		}</block></then> <else>else <block>{
			<expr_stmt><expr><call><name>setErrorMessage</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<return>return <expr><call><name><name>super</name><operator>.</operator><name>validateSourceGroup</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <name>isValid</name></expr>;</return>
	}</block></function>

	<comment type="line">// @Override</comment>
	<function><specifier>protected</specifier> <type><name>void</name></type> <name>updateWidgetEnablements</name><parameter_list>()</parameter_list> <block>{
		<decl_stmt><decl><type><name>boolean</name></type> <name>pageComplete</name> <init>= <expr><call><name>determinePageCompletion</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>setPageComplete</name><argument_list>(<argument><expr><name>pageComplete</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if>if <condition>(<expr><name>pageComplete</name></expr>)</condition><then> <block>{
			<expr_stmt><expr><call><name>setMessage</name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>updateWidgetEnablements</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><specifier>public</specifier> <type><name>void</name></type> <name>handleEvent</name><parameter_list>(<parameter><decl><type><name>Event</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name>updateWidgetEnablements</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="line">// @Override</comment>
	<function><specifier>protected</specifier> <type><name>String</name></type> <name>getErrorDialogTitle</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><name><name>Messages</name><operator>.</operator><name>ProjectRefreshSnapshotExportWizardPage_errorDialogTitle</name></name></expr>;</return>
	}</block></function>

	<comment type="line">// @Override</comment>
	<function><specifier>protected</specifier> <type><name>boolean</name></type> <name>allowNewContainerName</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><literal type="boolean">false</literal></expr>;</return>
	}</block></function>
}</block></class>
</unit>

</unit>
