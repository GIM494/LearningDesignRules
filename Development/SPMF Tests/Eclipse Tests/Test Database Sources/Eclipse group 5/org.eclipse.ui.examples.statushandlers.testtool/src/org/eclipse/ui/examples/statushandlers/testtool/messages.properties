###############################################################################
# Copyright (c) 2007, 2008 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
###############################################################################

OpenInfoDialogAction_OpenInformation=MessageDialog:openInformation()
ShowViewPropertySource_GUIElementLabel=GUI Element
ShowViewPropertySource_ThrownExceptionLabel=thrown Exception
FaultyExportWizard_Label=some label
FaultyExportWizard_Page=wizard
FaultyExportWizard_WindowTitle=window_title
OpenErrorDialogAction_1=MessageDialog:openError()
ShowViewComponent_Name=Views
ShowViewComponent_ShowLabel=Show
ShowViewRunnable_ShowView=ShowView
SleepingComponent_BlockFor=Block execution for
SleepingComponent_Miliseconds=ms
SleepingComponent_Name=Sleeping
SleepingComponent_SleepingFor=Sleeping for 
ShowViewComponent_ThrowingLabel=throwing
TestJob_ChildStatusMessage=This is the child status message
RuntimeExceptionEditor_Message=A sample RuntimeException thrown during editor site retrieval.
StatusHandlingComponent_Action=\ Action:
StatusHandlingComponent_ActionTooltip=Put action here. Empty means that no action available
StatusHandlingComponent_AddStatusLabel=Add status to the list
StatusHandlingComponent_blockTooltip=Decides if status will be shown in modal window
StatusHandlingComponent_ExclamantionMark=\ \!
StatusHandlingComponent_ExemplaryMessage=Something went wrong
StatusHandlingComponent_Explanation=\ Explanation:
StatusHandlingComponent_ExplanationTooltip=Put explanation here. Empty means that no explanation available
JobsAndRunnablesComponent_CreateJobWithParameters=Creates and schedules jobs according to specified parameters
JobsAndRunnablesComponent_DefaultResheduleValue=1000
JobsAndRunnablesComponent_DefaultThrowAfterTooltip=Exception/Error will be thrown after 50% of duration
JobsAndRunnablesComponent_progressNoForkTooltip=Use ResourcesPlugin.getWorkspace().run(new IWorkspaceRunnable(){...}) inside the IProgressService.runInUI(...)
JobsAndRunnablesRunnable_IndexOutOfBoundsMessage=A sample IndexOutOfBoundsException
JobsAndRunnablesRunnable_Name=Job or Runnable
JobsAndRunnablesRunnable_NullPointerExceptionMessage=A sample NullPointerException
JobsAndRunnablesRunnable_OutOfMemoryExceptionMessage=A sample OutOfMemoryError
JobsAndRunnablesRunnable_ProcessingTick=Processing tick \#
JobsAndRunnablesComponent_10minutes=10 minutes
JobsAndRunnablesComponent_10s=10 seconds
JobsAndRunnablesComponent_1minute=1 minute
JobsAndRunnablesComponent_1ms=1 millisecond
JobsAndRunnablesComponent_1s=1 second
JobsAndRunnablesComponent_23=0
JobsAndRunnablesComponent_DelayLabel=Start delay (ms):
JobsAndRunnablesComponent_DelayTooltip=Delay to start the job
JobsAndRunnablesComponent_DurationTooltip=Duration of the job/runnable
JobsAndRunnablesComponent_Exception=Exception:
JobsAndRunnablesComponent_ExceptionFromTheJob=Exception/Error to be thrown from the job/runnable
JobsAndRunnablesComponent_ExceptionThrownAfter=Exception/Error will be thrown after {0} % of duration
JobsAndRunnablesComponent_Jobs=Jobs
JobsAndRunnablesComponent_LockedWorkspace=Lock the workspace
JobsAndRunnablesComponent_LockedWorkspaceTooltip=Reserve exclusive access to workspace - setRule(ResourcesPlugin.getWorkspace().getRoot())
JobsAndRunnablesComponent_Name=Jobs And Runnables
JobsAndRunnablesComponent_NoOptions=No additional options to configure
JobsAndRunnablesComponent_Quantity=Quantity:
JobsAndRunnablesComponent_QunatityTooltip=How many jobs ought to be started ?
JobsAndRunnablesComponent_ResheduleDelayLabel=Reschedule Delay (ms):
JobsAndRunnablesComponent_resheduleLabel=Reschedule
JobAndRunnablesPropertySource_AsJobProperty=Run as Job
JobAndRunnablesPropertySource_DurationProperty=Duration
JobAndRunnablesPropertySource_ExceptionProperty=Exception
JobAndRunnablesPropertySource_GroupsProperty=Run Jobs in Groups
JobAndRunnablesPropertySource_InWindowProperty=Run in Window
JobAndRunnablesPropertySource_JobUIThreadProperty=Job run in UI Thread
JobAndRunnablesPropertySource_JobWorkspaceLockProperty=Job Workspace Lock
JobAndRunnablesPropertySource_LockProperty=Lock the workspace
JobAndRunnablesPropertySource_PercentProperty=Percent
JobAndRunnablesPropertySource_QunatityProperty=Job start quantity
JobAndRunnablesPropertySource_ResheduleDelay=Job reschedule delay
JobAndRunnablesPropertySource_ResheduleProperty=Reschedule jobs
JobAndRunnablesPropertySource_StartDelayProperty=Job start delay
JobAndRunnablesPropertySource_SystemJobProperty=System Job
JobAndRunnablesPropertySource_UIThreadProperty=Run in UI Thread
JobAndRunnablesPropertySource_UserJobProperty=User Job
JobAndRunnablesPropertySource_WrappedProperty=Wrapped in status
JobAndRunnablesPropertySource_DeferredProperty=Deferred
JobsAndRunnablesComponent_resheduleTooltip=Reschedule the job ('Reschedule Delay' is the period between reschedules)
JobsAndRunnablesComponent_ResheduleValueTooltip=Reschedule after ... (see the reschedule checkbox)
JobsAndRunnablesComponent_RunInUIThreadLabel=Run in UI thread (does not fork)
JobsAndRunnablesComponent_RunInUIThreadTooltip=Use IProgressService.runInUI(...)
JobsAndRunnablesComponent_SingleGroupLabel=Run in Group
JobsAndRunnablesComponent_SingleGroupTooltip=Run all of the jobs as a single group (if there is more than one job)
JobsAndRunnablesComponent_SystemJobLabel=System job
JobsAndRunnablesComponent_SystemJobTooltip=Decide whether the job is a system job /is presented on UI/
JobsAndRunnablesComponent_ThrowAfter=Throw exception after (% of duration):
JobsAndRunnablesComponent_UIJobTooltip=Use org.eclipse.ui.progress.UIJob (instead of org.eclipse.core.runtime.jobs.Job)
JobsAndRunnablesComponent_UIThreadLabel=Run in UI thread
JobsAndRunnablesComponent_UserJob=User job
JobsAndRunnablesComponent_UserJobTooltip=Decide whether the job is initiated directly by the UI end user
JobsAndRunnablesComponent_WindowRunnable=Runnable in Window
JobsAndRunnablesComponent_WindowRunnableTooltip=Use PlatformUI.getWorkbench().getActiveWorkbenchWindow().run(true, true, new IRunnableWithProgress(){...})
JobsAndRunnablesComponent_wrapTooltip=Wrap the exception in a MultiStatus instance
JobsAndRunnablesRunnable_GroupTaskName=Group
JobsAndRunnablesRunnable_SpiningInside=Spinning inside IProgressService
JobsAndRunnablesRunnable_SpinningTaskName=Spinning inside ApplicationWindow.run()
StatusHandlingComponent_GeneratedStatusSeverity=Severity of the generated status
StatusHandlingComponent_Hint=\ Hint:
StatusHandlingComponent_HintBlock=BLOCK
StatusHandlingComponent_HintLog=LOG
StatusHandlingComponent_HintNone=NONE
StatusHandlingComponent_HintShow=SHOW
StatusHandlingComponent_LogStatusLabel=Log status
StatusHandlingComponent_LogStatusTooltip=Sets one of the StatusManager hints for logging statuses (LOG or SHOWANDLOG)\!
StatusHandlingView_AddToTheExecutionList=Add to the execution list
StatusHandlingComponent_Name=Status Handling
StatusHandlingRunnable_Action=Action
StatusHandlingRunnable_Explanation=Explanation
StatusHandlingRunnable_Hint=Handle flag
StatusHandlingView_Delete=Delete
StatusHandlingView_Down=Move Down
StatusHandlingView_ExecuteAll=Execute All
StatusHandlingView_ExecuteTab=Execute tab
StatusHandlingView_ExecuteTabTooltip=Executes action from currently selected tab
StatusHandlingView_ExecutingTestBedSequence=Executing Test Bed Sequence
StatusHandlingView_Export=Export
StatusHandlingView_Import=Import
StatusHandlingView_LoadDialogTitle=Load sequence
StatusHandlingView_Remove=Remove
StatusHandlingView_SaveDialogTitle=Save sequence
StatusHandlingView_TestBedSequence=Test Bed Sequence
StatusHandlingView_Up=Move Up
StatusHandlingRunnable_StatusHandling=Status Handling
StatusHandlingRunnable_StatusHandlinNo=Status Handling \#
StatusHandlingRunnable_StatusProperty=Status
StatusHandlingRunnable_Wrapped=Wrapped in StatusAdapter
StatusHandlingComponent_PluginId=\ PluginID:
StatusHandlingComponent_PluginIdLabel=source plugin ID:
StatusHandlingComponent_PluginIdTooltip=Sets the ID of plugin which 'generated' the status
StatusHandlingComponent_Severity=Severity:
StatusHandlingComponent_SeverityCancel=Cancel
StatusHandlingComponent_SeverityError=Error
StatusHandlingComponent_SeverityInfo=Info
StatusHandlingComponent_SeverityLevel=Severity level:
StatusHandlingComponent_BlockLabel=Block
StatusHandlingComponent_FastExecute=Fast execute
StatusHandlingComponent_MessageLabel=Message
StatusHandlingComponent_MessageTooltip=Sets the message for status
StatusHandlingComponent_MultiStatus=MultiStatus
StatusHandlingComponent_MultiStatusTooltip=Decides if error should be reported as MultiStatus with some children.
StatusHandlingComponent_SeverityOK=Ok
StatusHandlingComponent_SeverityWarning=Warning
StatusHandlingComponent_ShowStatusLabel=Show status 
StatusHandlingComponent_TestStatusMessage=A test status No. 
StatusHandlingComponent_TitleLabel=Title
StatusHandlingComponent_TitleTooltip=title is the most important message
StatusHandlingComponent_Unknown=?
StatusHandlingComponent_Wrapped=\ Wrapped:
StatusHandlingComponent_WrappedLabel=Wrapped
StatusHandlingComponent_WrappedTooltip=Decides if IStatus should be wrapped in StatusAdapter. \nEnables explanation and action
RuntimeExceptionView_Message=A sample RuntimeException thrown during control creation.
TestJob_MultiStatusException=This is the MultiStatus exception
TestJob_MultiStatusMessage=This is the MultiStatus message
TestJob_TestJob=Test job
TestJob_UITask=UI Task
OpenErrorDialogAction_OpenError=MessageDialog:openError()
PartInitExceptionEditor_Message=A sample PartInitException thrown during viewpart initialization.
PartInitExceptionView_Message=A sample PartInitException thrown during viewpart initialization.
OpenWarningDialogAction_OpenWarning=MessageDialog:openWarning()
ThrowNullPointerAction_NPEMessage=Sample NullPointerException
