<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="0.9.5">

<unit revision="0.9.5" language="Java" filename="ui/examples/filesystem/CreatedNestedProjectsAction.java" hash="ec64f4935f8a1d4dc7cb3e1d62d03fdce03f10e3"><package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>examples</name><operator>.</operator><name>filesystem</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>resources</name><operator>.</operator><name>IProject</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>action</name><operator>.</operator><name>IAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>ISelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredSelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Shell</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>*</name></name>;</import>

<comment type="block" format="javadoc">/**
 * Popup menu action to find and create the projects nested within the
 * selected projects.
 *
 */</comment>
<class><specifier>public</specifier> class <name>CreatedNestedProjectsAction</name> <super><implements>implements <name>IObjectActionDelegate</name></implements></super> <block>{

	<decl_stmt><decl><specifier>private</specifier> <type><name>ISelection</name></type> <name>selection</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc">/**
	 * Constructor for Action1.
	 */</comment>
	<constructor><specifier>public</specifier> <name>CreatedNestedProjectsAction</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><specifier>private</specifier> <type><name>Shell</name></type> <name>getShell</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><call><name><name>targetPart</name><operator>.</operator><name>getSite</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getShell</name><argument_list>()</argument_list></call></expr>;</return>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#run(IAction)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>run</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <block>{
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>selection</name> <operator>instanceof</operator> <name>IStructuredSelection</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<decl_stmt><decl><type><name>Object</name></type> <name>element</name> <init>= <expr><operator>(</operator><operator>(</operator><name>IStructuredSelection</name><operator>)</operator> <name>selection</name><operator>)</operator><operator>.</operator><call><name>getFirstElement</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>element</name> <operator>instanceof</operator> <name>IProject</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<expr_stmt><expr><operator>new</operator> <call><name>NestedProjectCreator</name><argument_list>()</argument_list></call><operator>.</operator><call><name>createNestedProjects</name><argument_list>(<argument><expr><operator>new</operator> <name><name>IProject</name><index>[]</index></name> <block>{<expr><operator>(</operator><operator>(</operator><name>IProject</name><operator>)</operator> <name>element</name><operator>)</operator></expr>}</block></expr></argument>, <argument><expr><call><name>getShell</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#selectionChanged(IAction, ISelection)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>selectionChanged</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>ISelection</name></type> <name>selection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>selection</name></name> <operator>=</operator> <name>selection</name></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IObjectActionDelegate#setActivePart(IAction, IWorkbenchPart)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>setActivePart</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>targetPart</name></name> <operator>=</operator> <name>targetPart</name></expr>;</expr_stmt>
	}</block></function>

}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="ui/examples/filesystem/ExcludeResourceAction.java" hash="e5729585b4cfa5136987949bc617fa15b4465d2f"><package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>examples</name><operator>.</operator><name>filesystem</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>filesystem</name><operator>.</operator><name>EFS</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>resources</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>action</name><operator>.</operator><name>IAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>MessageDialog</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>ISelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredSelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Shell</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>*</name></name>;</import>

<class><specifier>public</specifier> class <name>ExcludeResourceAction</name> <super><implements>implements <name>IObjectActionDelegate</name></implements></super> <block>{

	<decl_stmt><decl><specifier>private</specifier> <type><name>ISelection</name></type> <name>selection</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc">/**
	 * Constructor for Action1.
	 */</comment>
	<constructor><specifier>public</specifier> <name>ExcludeResourceAction</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><specifier>private</specifier> <type><name>void</name></type> <name>exclude</name><parameter_list>(<parameter><decl><type><name>IResource</name></type> <name>resource</name></decl></parameter>)</parameter_list> <block>{
		<try>try <block>{
			<decl_stmt><decl><type><name>URI</name></type> <name>nullURI</name> <init>= <expr><operator>new</operator> <call><name>URI</name><argument_list>(<argument><expr><name><name>EFS</name><operator>.</operator><name>SCHEME_NULL</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if>if <condition>(<expr><call><name><name>resource</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>IResource</name><operator>.</operator><name>FILE</name></name></expr>)</condition><then> <block>{
				<decl_stmt><decl><type><name>IFile</name></type> <name>link</name> <init>= <expr><operator>(</operator><name>IFile</name><operator>)</operator> <name>resource</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name>link</name><operator>.</operator><name>createLink</name></name><argument_list>(<argument><expr><name>nullURI</name></expr></argument>, <argument><expr><name><name>IResource</name><operator>.</operator><name>REPLACE</name></name> <operator>|</operator> <name><name>IResource</name><operator>.</operator><name>ALLOW_MISSING_LOCAL</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else>else <block>{
				<decl_stmt><decl><type><name>IFolder</name></type> <name>link</name> <init>= <expr><operator>(</operator><name>IFolder</name><operator>)</operator> <name>resource</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name>link</name><operator>.</operator><name>createLink</name></name><argument_list>(<argument><expr><name>nullURI</name></expr></argument>, <argument><expr><name><name>IResource</name><operator>.</operator><name>REPLACE</name></name> <operator>|</operator> <name><name>IResource</name><operator>.</operator><name>ALLOW_MISSING_LOCAL</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
			<expr_stmt><expr><call><name><name>MessageDialog</name><operator>.</operator><name>openError</name></name><argument_list>(<argument><expr><call><name>getShell</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><literal type="string">"Error excluding resource"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>

	<function><specifier>private</specifier> <type><name>Shell</name></type> <name>getShell</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><call><name><name>targetPart</name><operator>.</operator><name>getSite</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getShell</name><argument_list>()</argument_list></call></expr>;</return>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#run(IAction)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>run</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <block>{
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>selection</name> <operator>instanceof</operator> <name>IStructuredSelection</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<decl_stmt><decl><type><name>Object</name></type> <name>element</name> <init>= <expr><operator>(</operator><operator>(</operator><name>IStructuredSelection</name><operator>)</operator> <name>selection</name><operator>)</operator><operator>.</operator><call><name>getFirstElement</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>element</name> <operator>instanceof</operator> <name>IResource</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<decl_stmt><decl><type><name>IResource</name></type> <name>resource</name> <init>= <expr><operator>(</operator><name>IResource</name><operator>)</operator> <name>element</name></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><call><name><name>resource</name><operator>.</operator><name>isLinked</name></name><argument_list>()</argument_list></call></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<expr_stmt><expr><call><name>exclude</name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#selectionChanged(IAction, ISelection)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>selectionChanged</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>ISelection</name></type> <name>selection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>selection</name></name> <operator>=</operator> <name>selection</name></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IObjectActionDelegate#setActivePart(IAction, IWorkbenchPart)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>setActivePart</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>targetPart</name></name> <operator>=</operator> <name>targetPart</name></expr>;</expr_stmt>
	}</block></function>

}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="ui/examples/filesystem/ExpandZipAction.java" hash="7146db9f78e664ccb58f9a7ca502c5f2f10e978a"><package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>examples</name><operator>.</operator><name>filesystem</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>internal</name><operator>.</operator><name>filesystem</name><operator>.</operator><name>zip</name><operator>.</operator><name>ZipFileSystem</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>resources</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>runtime</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>action</name><operator>.</operator><name>IAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>MessageDialog</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>ISelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredSelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Shell</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>*</name></name>;</import>

<class><specifier>public</specifier> class <name>ExpandZipAction</name> <super><implements>implements <name>IObjectActionDelegate</name></implements></super> <block>{

	<decl_stmt><decl><specifier>private</specifier> <type><name>ISelection</name></type> <name>selection</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc">/**
	 * Constructor for Action1.
	 */</comment>
	<constructor><specifier>public</specifier> <name>ExpandZipAction</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><specifier>private</specifier> <type><name>void</name></type> <name>expandZip</name><parameter_list>(<parameter><decl><type><name>IFile</name></type> <name>file</name></decl></parameter>)</parameter_list> <block>{
		<try>try <block>{
			<decl_stmt><decl><type><name>URI</name></type> <name>zipURI</name> <init>= <expr><operator>new</operator> <call><name>URI</name><argument_list>(<argument><expr><name><name>ZipFileSystem</name><operator>.</operator><name>SCHEME_ZIP</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="string">"/"</literal></expr></argument>, <argument><expr><call><name><name>file</name><operator>.</operator><name>getLocationURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>IFolder</name></type> <name>link</name> <init>= <expr><call><name><name>file</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getFolder</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>file</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>link</name><operator>.</operator><name>createLink</name></name><argument_list>(<argument><expr><name>zipURI</name></expr></argument>, <argument><expr><name><name>IResource</name><operator>.</operator><name>REPLACE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
			<expr_stmt><expr><call><name><name>MessageDialog</name><operator>.</operator><name>openError</name></name><argument_list>(<argument><expr><call><name>getShell</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><literal type="string">"Error opening zip file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>

	<function><specifier>private</specifier> <type><name>Shell</name></type> <name>getShell</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><call><name><name>targetPart</name><operator>.</operator><name>getSite</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getShell</name><argument_list>()</argument_list></call></expr>;</return>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#run(IAction)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>run</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <block>{
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>selection</name> <operator>instanceof</operator> <name>IStructuredSelection</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<decl_stmt><decl><type><name>Object</name></type> <name>element</name> <init>= <expr><operator>(</operator><operator>(</operator><name>IStructuredSelection</name><operator>)</operator> <name>selection</name><operator>)</operator><operator>.</operator><call><name>getFirstElement</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>element</name> <operator>instanceof</operator> <name>IFile</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<expr_stmt><expr><call><name>expandZip</name><argument_list>(<argument><expr><operator>(</operator><name>IFile</name><operator>)</operator> <name>element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#selectionChanged(IAction, ISelection)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>selectionChanged</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>ISelection</name></type> <name>selection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>selection</name></name> <operator>=</operator> <name>selection</name></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IObjectActionDelegate#setActivePart(IAction, IWorkbenchPart)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>setActivePart</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>targetPart</name></name> <operator>=</operator> <name>targetPart</name></expr>;</expr_stmt>
	}</block></function>

}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="ui/examples/filesystem/CollapseZipAction.java" hash="21b6c9dc412b45cf9993323201437af208f5acd1"><package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>examples</name><operator>.</operator><name>filesystem</name></name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>net</name><operator>.</operator><name>URI</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>filesystem</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>resources</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>runtime</name><operator>.</operator><name>Path</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>action</name><operator>.</operator><name>IAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>MessageDialog</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>ISelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredSelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Shell</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>*</name></name>;</import>

<class><specifier>public</specifier> class <name>CollapseZipAction</name> <super><implements>implements <name>IObjectActionDelegate</name></implements></super> <block>{

	<decl_stmt><decl><specifier>private</specifier> <type><name>ISelection</name></type> <name>selection</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc">/**
	 * Constructor for Action1.
	 */</comment>
	<constructor><specifier>public</specifier> <name>CollapseZipAction</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><specifier>private</specifier> <type><name>void</name></type> <name>collapseZip</name><parameter_list>(<parameter><decl><type><name>IFolder</name></type> <name>folder</name></decl></parameter>)</parameter_list> <block>{
		<try>try <block>{
			<decl_stmt><decl><type><name>URI</name></type> <name>zipURI</name> <init>= <expr><operator>new</operator> <call><name>URI</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getLocationURI</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getQuery</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line">//check if the zip file is physically stored below the folder in the workspace</comment>
			<decl_stmt><decl><type><name>IFileStore</name></type> <name>parentStore</name> <init>= <expr><call><name><name>EFS</name><operator>.</operator><name>getStore</name></name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLocationURI</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>URI</name></type> <name>childURI</name> <init>= <expr><call><name><name>parentStore</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>toURI</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if>if <condition>(<expr><call><name><name>URIUtil</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>zipURI</name></expr></argument>, <argument><expr><name>childURI</name></expr></argument>)</argument_list></call></expr>)</condition><then> <block>{
				<comment type="line">//the zip file is in the workspace so just delete the link </comment>
				<comment type="line">// and refresh the parent to create the resource</comment>
				<expr_stmt><expr><call><name><name>folder</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name><name>IResource</name><operator>.</operator><name>NONE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name>folder</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>refreshLocal</name><argument_list>(<argument><expr><name><name>IResource</name><operator>.</operator><name>DEPTH_INFINITE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else>else <block>{
				<comment type="line">//otherwise the zip file must be a linked resource</comment>
				<decl_stmt><decl><type><name>IFile</name></type> <name>file</name> <init>= <expr><call><name><name>folder</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getFile</name><argument_list>(<argument><expr><operator>new</operator> <call><name>Path</name><argument_list>(<argument><expr><call><name><name>folder</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name>file</name><operator>.</operator><name>createLink</name></name><argument_list>(<argument><expr><name>zipURI</name></expr></argument>, <argument><expr><name><name>IResource</name><operator>.</operator><name>REPLACE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
			<expr_stmt><expr><call><name><name>MessageDialog</name><operator>.</operator><name>openError</name></name><argument_list>(<argument><expr><call><name>getShell</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><literal type="string">"Error opening zip file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>

	<function><specifier>private</specifier> <type><name>Shell</name></type> <name>getShell</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><call><name><name>targetPart</name><operator>.</operator><name>getSite</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getShell</name><argument_list>()</argument_list></call></expr>;</return>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#run(IAction)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>run</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <block>{
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>selection</name> <operator>instanceof</operator> <name>IStructuredSelection</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<decl_stmt><decl><type><name>Object</name></type> <name>element</name> <init>= <expr><operator>(</operator><operator>(</operator><name>IStructuredSelection</name><operator>)</operator> <name>selection</name><operator>)</operator><operator>.</operator><call><name>getFirstElement</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>element</name> <operator>instanceof</operator> <name>IFolder</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<expr_stmt><expr><call><name>collapseZip</name><argument_list>(<argument><expr><operator>(</operator><name>IFolder</name><operator>)</operator> <name>element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#selectionChanged(IAction, ISelection)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>selectionChanged</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>ISelection</name></type> <name>selection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>selection</name></name> <operator>=</operator> <name>selection</name></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IObjectActionDelegate#setActivePart(IAction, IWorkbenchPart)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>setActivePart</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>targetPart</name></name> <operator>=</operator> <name>targetPart</name></expr>;</expr_stmt>
	}</block></function>

}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="ui/examples/filesystem/IncludeResourceAction.java" hash="a6585670c79584d3fba5acc64b2b997580e69dcc"><package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>examples</name><operator>.</operator><name>filesystem</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>resources</name><operator>.</operator><name>IResource</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>action</name><operator>.</operator><name>IAction</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>dialogs</name><operator>.</operator><name>MessageDialog</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>ISelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>jface</name><operator>.</operator><name>viewers</name><operator>.</operator><name>IStructuredSelection</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>swt</name><operator>.</operator><name>widgets</name><operator>.</operator><name>Shell</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>*</name></name>;</import>

<class><specifier>public</specifier> class <name>IncludeResourceAction</name> <super><implements>implements <name>IObjectActionDelegate</name></implements></super> <block>{

	<decl_stmt><decl><specifier>private</specifier> <type><name>ISelection</name></type> <name>selection</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>private</specifier> <type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl>;</decl_stmt>

	<comment type="block" format="javadoc">/**
	 * Constructor for Action1.
	 */</comment>
	<constructor><specifier>public</specifier> <name>IncludeResourceAction</name><parameter_list>()</parameter_list> <block>{
		<expr_stmt><expr><call><name>super</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>

	<function><specifier>private</specifier> <type><name>Shell</name></type> <name>getShell</name><parameter_list>()</parameter_list> <block>{
		<return>return <expr><call><name><name>targetPart</name><operator>.</operator><name>getSite</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getShell</name><argument_list>()</argument_list></call></expr>;</return>
	}</block></function>

	<function><specifier>private</specifier> <type><name>void</name></type> <name>include</name><parameter_list>(<parameter><decl><type><name>IResource</name></type> <name>resource</name></decl></parameter>)</parameter_list> <block>{
		<try>try <block>{
			<expr_stmt><expr><call><name><name>resource</name><operator>.</operator><name>delete</name></name><argument_list>(<argument><expr><name><name>IResource</name><operator>.</operator><name>NONE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>resource</name><operator>.</operator><name>getParent</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>refreshLocal</name><argument_list>(<argument><expr><name><name>IResource</name><operator>.</operator><name>DEPTH_INFINITE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{
			<expr_stmt><expr><call><name><name>MessageDialog</name><operator>.</operator><name>openError</name></name><argument_list>(<argument><expr><call><name>getShell</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><literal type="string">"Error including resource"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#run(IAction)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>run</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <block>{
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>selection</name> <operator>instanceof</operator> <name>IStructuredSelection</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<decl_stmt><decl><type><name>Object</name></type> <name>element</name> <init>= <expr><operator>(</operator><operator>(</operator><name>IStructuredSelection</name><operator>)</operator> <name>selection</name><operator>)</operator><operator>.</operator><call><name>getFirstElement</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>element</name> <operator>instanceof</operator> <name>IResource</name><operator>)</operator></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<decl_stmt><decl><type><name>IResource</name></type> <name>resource</name> <init>= <expr><operator>(</operator><name>IResource</name><operator>)</operator> <name>element</name></expr></init></decl>;</decl_stmt>
		<if>if <condition>(<expr><operator>!</operator><call><name><name>resource</name><operator>.</operator><name>isLinked</name></name><argument_list>()</argument_list></call></expr>)</condition><then>
			<block type="pseudo"><return>return;</return></block></then></if>
		<expr_stmt><expr><call><name>include</name><argument_list>(<argument><expr><name>resource</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IActionDelegate#selectionChanged(IAction, ISelection)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>selectionChanged</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>ISelection</name></type> <name>selection</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>selection</name></name> <operator>=</operator> <name>selection</name></expr>;</expr_stmt>
	}</block></function>

	<comment type="block" format="javadoc">/**
	 * @see IObjectActionDelegate#setActivePart(IAction, IWorkbenchPart)
	 */</comment>
	<function><specifier>public</specifier> <type><name>void</name></type> <name>setActivePart</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>, <parameter><decl><type><name>IWorkbenchPart</name></type> <name>targetPart</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>targetPart</name></name> <operator>=</operator> <name>targetPart</name></expr>;</expr_stmt>
	}</block></function>
}</block></class>
</unit>

<unit revision="0.9.5" language="Java" filename="ui/examples/filesystem/Policy.java" hash="db50e142765621bccbb8a35e02182f788814b06e"><comment type="block" format="javadoc">/*******************************************************************************
 * Copyright (c) 2006 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/</comment>
<package>package <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>ui</name><operator>.</operator><name>examples</name><operator>.</operator><name>filesystem</name></name>;</package>

<import>import <name><name>org</name><operator>.</operator><name>eclipse</name><operator>.</operator><name>core</name><operator>.</operator><name>runtime</name><operator>.</operator><name>*</name></name>;</import>
<import>import <name><name>org</name><operator>.</operator><name>osgi</name><operator>.</operator><name>framework</name><operator>.</operator><name>Bundle</name></name>;</import>

<comment type="block" format="javadoc">/**
 * 
 */</comment>
<class><specifier>public</specifier> class <name>Policy</name> <block>{
	<decl_stmt><decl><specifier>private</specifier> <specifier>static</specifier> <type><name>Bundle</name></type> <name>bundle</name></decl>;</decl_stmt>
	<decl_stmt><decl><specifier>public</specifier> <specifier>static</specifier> <type><specifier>final</specifier> <name>String</name></type> <name>PI_FILESYSTEM_EXAMPLE</name> <init>= <expr><literal type="string">"org.eclipse.ui.examples.filesystem"</literal></expr></init></decl>;</decl_stmt> <comment type="line">//$NON-NLS-1$</comment>

	<function><specifier>private</specifier> <specifier>static</specifier> <type><name>Bundle</name></type> <name>getBundle</name><parameter_list>()</parameter_list> <block>{
		<if>if <condition>(<expr><name>bundle</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><then>
			<block type="pseudo"><expr_stmt><expr><name>bundle</name> <operator>=</operator> <call><name><name>Platform</name><operator>.</operator><name>getBundle</name></name><argument_list>(<argument><expr><name>PI_FILESYSTEM_EXAMPLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block></then></if>
		<return>return <expr><name>bundle</name></expr>;</return>
	}</block></function>

	<function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>log</name><parameter_list>(<parameter><decl><type><name>IStatus</name></type> <name>status</name></decl></parameter>)</parameter_list> <block>{
		<expr_stmt><expr><call><name><name>Platform</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><call><name>getBundle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>log</name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>log</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>IStatus</name></type> <name>status</name></decl></parameter>)</parameter_list> <block>{
		<decl_stmt><decl><type><specifier>final</specifier> <name>ILog</name></type> <name>log</name> <init>= <expr><call><name><name>Platform</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><call><name>getBundle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>log</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Status</name><argument_list>(<argument><expr><call><name><name>status</name><operator>.</operator><name>getSeverity</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>PI_FILESYSTEM_EXAMPLE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>log</name></name><argument_list>(<argument><expr><name>status</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>log</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>message</name></decl></parameter>, <parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{
		<decl_stmt><decl><type><specifier>final</specifier> <name>ILog</name></type> <name>log</name> <init>= <expr><call><name><name>Platform</name><operator>.</operator><name>getLog</name></name><argument_list>(<argument><expr><call><name>getBundle</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>log</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Status</name><argument_list>(<argument><expr><name><name>IStatus</name><operator>.</operator><name>ERROR</name></name></expr></argument>, <argument><expr><name>PI_FILESYSTEM_EXAMPLE</name></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>message</name></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
}</block></class>
</unit>

</unit>
