{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Group = AbstractUIPlugin:\
\
2 child class defines constructor with no parameters\
9 is public class\
16 child class has public static function getDefault()\
\
2 9 #SUP: 12\
2 9 16 #SUP: 11\
9 #SUP: 18\
9 16 #SUP: 16\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 9 is public class\
22 child class does not define constructor\
91 child class has public function execute()\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Group = MarkerViewHandler:\
9 22 91 #SUP: 11\
9 22 91 93 94 95 #SUP: 10\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 2 child class defines constructor with no parameters\
9 is public class\
21 child class has non-empty-body constructor\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
Group = MarkerSupportView:\
2 9 21 #SUP: 5\
9 21 #SUP: 6\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
4 child class has member field of type String\
9 is public class\
151 child class has public function loadSettings()\
152 loadSettings() function has parameters of types IMemento\
153 child class has void function loadSettings()\
154 child class has public function loadLegacySettings()\
155 loadLegacySettings() function has parameters of types IMemento\
156 child class has void function loadLegacySettings()\
157 child class has public function initialize()\
158 initialize() function has parameters of types ProblemFilter\
159 child class has void function initialize()\
160 child class has public function saveSettings()\
161 saveSettings() function has parameters of types IMemento\
162 child class has void function saveSettings()\
163 child class has public function select()\
164 select() function has parameters of types MarkerItem\
165 select() function returns type boolean\
166 child class has public function getCompletion()\
167 getCompletion() function returns type int\
168 child class has public function setCompletion()\
169 setCompletion() function has parameters of types int\
170 setCompletion() function modifies member variablethis\
171 child class has void function setCompletion()\
172 child class has public function populateWorkingCopy()\
173 populateWorkingCopy() function has parameters of types MarkerFieldFilter\
174 child class has void function populateWorkingCopy()\
175 child class overrides function initialize() in parent class\
176 child class overrides function populateWorkingCopy() in parent class\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Group. = MarkerFieldFilter:\
4 9 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 172 173 174 175 176 #SUP: 4\
9 #SUP: 6\
9 157 159 172 173 174 #SUP: 5\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 2 child class defines constructor with no parameters\
9 is public class\
21 child class has non-empty-body constructor\
157 child class has public function initialize()\
159 child class has void function initialize()\
397 child class has public function apply()\
398 apply() function has parameters of types MarkerFieldFilter\
399 child class has void function apply()\
400 child class has public function createContents()\
402 createContents() function has parameters of types Composite\
403 child class has void function createContents()\
407 initialize() function has parameters of types MarkerFieldFilter\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Group = FilterConfigurationArea:\
2 9 21 157 159 397 398 399 400 402 403 407 #SUP: 5\
9 #SUP: 7\
9 157 159 397 398 399 400 402 403 407 #SUP: 6\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
2 child class defines constructor with no parameters\
4 child class has member field of type String\
9 is public class\
21 child class has non-empty-body constructor\
151 child class has public function loadSettings()\
152 loadSettings() function has parameters of types IMemento\
153 child class has void function loadSettings()\
154 child class has public function loadLegacySettings()\
155 loadLegacySettings() function has parameters of types IMemento\
156 child class has void function loadLegacySettings()\
157 child class has public function initialize()\
158 initialize() function has parameters of types ProblemFilter\
159 child class has void function initialize()\
160 child class has public function saveSettings()\
161 saveSettings() function has parameters of types IMemento\
162 child class has void function saveSettings()\
163 child class has public function select()\
164 select() function has parameters of types MarkerItem\
165 select() function returns type boolean\
166 child class has public function getCompletion()\
167 getCompletion() function returns type int\
168 child class has public function setCompletion()\
169 setCompletion() function has parameters of types int\
170 setCompletion() function modifies member variablethis\
171 child class has void function setCompletion()\
172 child class has public function populateWorkingCopy()\
173 populateWorkingCopy() function has parameters of types MarkerFieldFilter\
174 child class has void function populateWorkingCopy()\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Group = CompatibilityFieldFilter:\
2 4 9 21 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 172 173 174 #SUP: 4\
4 9 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 172 173 174 #SUP: 5\
9 #SUP: 6\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
2 child class defines constructor with no parameters\
9 is public class\
21 child class has non-empty-body constructor\
530 child class has protected function getContributionItems()\
534 getContributionItems() function returns type IContributionItem\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Group = MarkersContribution:\
2 21 #SUP: 4\
2 9 21 530 534 #SUP: 3\
9 530 534 #SUP: 4\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 2 child class defines constructor with no parameters\
9 is public class\
558 child class has public function test()\
559 test() function has parameters of types Object, String\
560 test() function returns type boolean\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Group = Property Tester:\
2 9 558 559 560 #SUP: 4\
2 9 21 558 559 560 #SUP: 3\
4 9 558 559 560 #SUP: 3\
9 558 559 560 #SUP: 5\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
22 child class does not define constructor\
793 child class has public function getValue()\
794 getValue() function has parameters of types MarkerItem\
795 getValue() function returns type String\
807 child class has public function compare()\
808 compare() function returns output from function call\
810 compare() function has parameters of types MarkerItem\
811 compare() function returns type int\
819 child class overrides function compare() in parent class\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Group = MarkerField:\
9 #SUP: 15\
9 22 #SUP: 9\
9 793 794 795 #SUP: 12\
9 807 810 811 #SUP: 11\
9 807 808 810 811 #SUP: 9\
9 807 810 811 819 #SUP: 10\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
1 child class has empty-body constructor\
2 child class defines constructor with no parameters\
9 is public class\
\
Group =  ViewPart:\
1 2 9 985 988 989 1078 1079 1126 1174 1175 1179 1180 1181 #SUP: 8\
9 #SUP: 13\
9 985 988 989 1078 1079 #SUP: 12\
9 985 988 989 1078 1079 1126 #SUP: 9\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
2 child class defines constructor with no parameters\
9 is public class\
21 child class has non-empty-body constructor\
530 child class has protected function getContributionItems()\
534 getContributionItems() function returns type IContributionItem\
\
Group = Compound ContrinbutionItem:\
2 21 #SUP: 4\
2 9 21 530 534 #SUP: 3\
9 530 534 #SUP: 4\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
22 child class does not define constructor\
91 child class has public function execute()\
\
Group = AbstractHandler:\
9 22 #SUP: 18\
9 22 91 #SUP: 16\
9 22 91 93 94 #SUP: 15\
22 #SUP: 19\
22 91 #SUP: 17\
22 91 93 94 #SUP: 16\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
2 child class defines constructor with no parameters\
9 is public class\
21 child class has non-empty-body constructor\
\
Group = ExtendedMarkersView:\
2 9 21 #SUP: 5\
9 21 #SUP: 7\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
1 child class has empty-body constructor\
2 child class defines constructor with no parameters\
4 child class has member field of type String\
9 is public class\
1518 child class has member field called BUNDLE_NAME\
1519 child class has member field BUNDLE_NAME of type String\
1904 child class has member field called RESOURCE_BUNDLE\
1905 child class has member field RESOURCE_BUNDLE of type ResourceBundle\
1906 child class has public static function getString()\
1907 getString() function returns output from function call\
1908 getString() function has parameters of types String\
1909 getString() function returns type String\
\
Group = NLS:\
1 2 4 9 1518 1519 #SUP: 8\
1 2 4 9 40 1518 1519 1904 1905 1906 1907 1908 1909 #SUP: 7\
4 9 1518 1519 #SUP: 9\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
4 child class has member field of type String\
9 is public class\
21 child class has non-empty-body constructor\
659 child class has public function getAdapter()\
660 getAdapter() function has parameters of types Class\
661 getAdapter() function returns type Object\
1067 saveState() function has parameters of types IMemento\
1068 child class has void function saveState()\
2063 child class has void function run()\
2086 child class has public function toString()\
2087 toString() function returns type String\
2088 child class has public function getTypeId()\
2089 getTypeId() function returns type String\
2090 child class has protected function saveState()\
2091 child class has public static function create()\
2092 call to constructor of JobsAndRunnablesRunnable is made in create()\
2093 create() function has parameters of types IMemento\
2094 create() function returns type TestBedRunnable\
\
\
Group = TestBedRunnable:\
4 9 #SUP: 5\
4 9 21 659 660 661 1067 1068 2061 2063 2086 2087 2088 2089 2090 2091 2093 2094 #SUP: 4\
9 #SUP: 6\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
22 child class does not define constructor\
1126 child class has member field of type TableViewer\
1129 child class has member field of type List\
2227 child class has public function widgetSelected()\
2228 widgetSelected() function has parameters of types SelectionEvent\
2229 child class has void function widgetSelected()\
\
Group = SelectionAdapter:\
22 #SUP: 3\
1126 1129 #SUP: 3\
2227 2228 2229 #SUP: 4\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
22 child class does not define constructor\
141 child class has member field of type int\
556 child class has member field of type Object\
2846 child class has member field called manyStrings\
2847 child class has member field manyStrings of type Object\
2848 child class implements ALotOfConstants\
\
Group = ALotOfStaticVars:\
9 22 #SUP: 5\
9 22 141 #SUP: 3\
9 22 556 2846 2847 #SUP: 4\
9 22 556 2846 2847 2848 #SUP: 3\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
22 child class does not define constructor\
246 child class has public function getName()\
248 getName() function returns type String\
391 child class has member field of type Button\
868 child class has public function getId()\
1342 child class has public function createControl()\
1349 createControl() function has parameters of types Composite\
1350 child class has void function createControl()\
3881 child class has public function initializeFrom()\
3882 initializeFrom() function has parameters of types ILaunchConfiguration\
3883 child class has void function initializeFrom()\
3884 child class has public function performApply()\
3885 performApply() function has parameters of types ILaunchConfigurationWorkingCopy\
3886 child class has void function performApply()\
3887 child class has public function setDefaults()\
3888 setDefaults() function has parameters of types ILaunchConfigurationWorkingCopy\
3889 child class has void function setDefaults()\
\
\
Group = AbstractLaunchConfigurationTab:\
9 22 246 248 #SUP: 5\
9 22 36 246 248 868 3870 #SUP: 3\
9 22 246 248 391 1342 1349 1350 3881 3882 3883 3884 3885 3886 3887 3888 3889 #SUP: 3\
9 22 246 248 1342 1349 1350 3881 3882 3883 3884 3885 3886 3887 3888 3889 #SUP: 4\
\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
21 child class has non-empty-body constructor\
\
Group = DebugElement:\
9 21 #SUP: 12\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
4 child class has member field of type String\
9 is public class\
21 child class has non-empty-body constructor\
\
Group = PDADebugElement:\
4 9 21 #SUP: 6\
9 21 #SUP: 8\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
21 child class has non-empty-body constructor\
4528 child class has public function createResult()\
4530 createResult() function calls constructor in return statement\
4531 createResult() function returns output from function call\
4532 createResult() function returns output from function call to PDAListResult\
4533 createResult() function has parameters of types String\
4534 createResult() function returns type PDACommandResult\
4535 call to constructor of PDACommandResult is made in createResult()\
4536 createResult() function returns output from function call to PDACommandResult\
\
Group = PDACommand:\
9 21 4528 4530 4531 4533 4534 #SUP: 25\
9 21 4528 4530 4531 4533 4534 4535 4536 #SUP: 18\
21 #SUP: 26\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
21 child class has non-empty-body constructor\
139 child class defines constructor with parameters of types String\
4563 child class has public static function isEventMessage()\
4564 isEventMessage() function returns output from function call\
4565 isEventMessage() function has parameters of types String\
4566 isEventMessage() function returns type boolean\
\
Group = PDAEvent:\
9 21 139 #SUP: 15\
9 21 139 4563 4564 4565 4566 #SUP: 14\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
21 child class has non-empty-body constructor\
139 child class defines constructor with parameters of types String\
4563 child class has public static function isEventMessage()\
4564 isEventMessage() function returns output from function call\
4565 isEventMessage() function has parameters of types String\
4566 isEventMessage() function returns type boolean\
4606 child class overrides function isEventMessage() in parent class\
\
Group = PDARunControlEvent:\
9 21 139 4563 4564 4565 4566 #SUP: 7\
9 21 139 4563 4564 4565 4566 4606 #SUP: 6\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
21 child class has non-empty-body constructor\
139 child class defines constructor with parameters of types String\
\
Group = PDACommandResult:\
9 21 139 #SUP: 6\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
9 is public class\
22 child class does not define constructor\
679 child class has public function getText()\
680 getText() function returns output from function call\
681 getText() function has parameters of types Object\
682 getText() function returns type String\
683 child class has public function getImage()\
685 getImage() function has parameters of types Object\
686 getImage() function returns type Image\
796 getImage() function returns output from function call\
5112 child class has private function error()\
5113 call to constructor of Status is made in error()\
5114 error() function has parameters of types String, Throwable\
5115 child class has void function error()\
\
Group = LabelProvider:\
9 22 679 681 682 #SUP: 9\
9 22 679 680 681 682 683 685 686 796 5112 5113 5115 #SUP: 8\
9 22 679 680 681 682 683 685 686 796 5112 5113 5114 5115 #SUP: 6\
\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
General comments: \
\
(1) Generally speaking, all of the groupings that were created seemed smaller and more specific. The more specific the set of attributes in an FI, the more interesting the implications about that grouping. \
\
(2) The FIs that were found in this way of grouping the classes were different from the ones that came from the analysis of the database as a whole, which supports the idea of looking for rules in multiple ways.\
\
(3) A majority of the attributes in the FIs generated have to do with functions (their parameters, return type, visibility, etc.). Since we look at groups of classes composed of the parent class, and child and grandchild classes, I wonder if we don\'92t cover the majority of the rules pertaining to individual functions. We still have the challenge of discovering rules pertaining ordered function calls; however, this method does seem to discover a number of interesting rules with regards to the functions within these groups of classes.\
\
(4) Some sort of DOI measure would come in handy in ordering the FIs to display to the user, since all the FIs seem to be fairly interesting and could yield useful rules. This might be the next thing to work on; developing some kind of DOI measure and incorporating it to select particular FIs. Another thing to consider with this tool is how exactly the developer/user might interact with the tool because that would affect how we display these FIs. For instance, maybe we can display them in such a way that the user can select the items in the itemset that most interest them, or maybe we can have them place the attributes in \'93bins\'94 that indicate the antecedent and consequent of a design rule.\
\
(5) There are a far larger number of classes that had enough rows to be analyzed; part of what helped with this is probably the fact that we analyzed both children and grandchildren for a parent class, which results in an increased number of rows. However, despite the larger number of databases, their wasn\'92t a significant increase in the total average number of FIs produced. For this analysis, there was 25 different groupings that produced a total of 76 FIs, among them FIs that only contained a single item. That is there was an average of about 3 FIs per grouping that was produced. In the previous test (see eclipseSubclass_analysis), a total of 8 groupings were made with a total of 20 FIs, which makes for about 2.5 FIs per grouping. This means that it is likely that our process is scalable. Furthermore, the groupings produced in this test seemed to be able to associate more specific sets of attributes together. \
\
Based off of these results, it seems like we have a good method of outputting attributes and of discovering FIs that have useful associations between these attributes. The next thing to focus on is probably some way of measuring/using the degree of interest of FIs, so that we can focus on outputting the most interesting attributes to the user.\
\
\
\
\
\
\
\
}